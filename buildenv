# bump: make-version /MMAKE_VERSION="(.*)"/ https://ftp.gnu.org/gnu/make/|re:/make-([\d.]+).tar.gz/$1/|semver:*
# Deliberately misspelt so that CMAKE's regex also doesn't catch this
MMAKE_VERSION="4.4.1"

export ZOPEN_CATEGORIES="development build_system"
export ZOPEN_BUILD_LINE="STABLE"
export ZOPEN_STABLE_URL="https://ftp.gnu.org/gnu/make/make-${MMAKE_VERSION}.tar.gz"
export ZOPEN_STABLE_DEPS="curl gzip tar m4 perl make zoslib zusage gettext"

export ZOPEN_DEV_URL="https://git.savannah.gnu.org/git/make.git"
export ZOPEN_DEV_DEPS="git make m4 perl autoconf automake help2man texinfo xz zusage gettext"
export ZOPEN_CHECK="check_make"
export ZOPEN_INSTALL="install_make"
export ZOPEN_COMP=CLANG

export ZOPEN_EXTRA_CFLAGS="-mzos-target=zosv2r5 -march=z13"
export ZOPEN_SYSTEM_PREREQS="zos25"

# Use a function as ./make doesn't exist at buildenv processing
install_make()
{
  ./make install "$@"
}

check_make()
{
(cd "${ZOPEN_ROOT}/make-$MMAKE_VERSION/tests" && perl ./run_make_tests.pl -srcdir ../ -make ../make 2>&1)
}

zopen_check_results()
{
chk="$1/$2_check.log"

if grep ".* Tests.*No Failures :-)" ${chk} >/dev/null; then
  totalTests=$(grep ".* Tests.*No Failures :-)" ${chk} | cut -f1 -d' ')
  cat <<ZZ
actualFailures:0
totalTests:$totalTests
expectedFailures:1
ZZ
  return
fi

failures=$(grep ".* Test.*in .* Categor.*Failed" ${chk} | cut -f1 -d' ')
success=$(grep -E "[0-9]+ passed" $chk | sed -e 's#.*[(/]\([0-9]\+\) passed)#\1#g' | awk '{s+=$1} END {print s}')
totalTests=$((failures+success))

cat <<ZZ
actualFailures:$failures
totalTests:$totalTests
expectedFailures:2
ZZ
}

zopen_append_to_zoslib_env() {
cat <<EOF
_ENCODE_FILE_NEW|unset|
EOF
}

zopen_get_version()
{
  ./make --version | head -1 | awk ' { print $3; }'
}
